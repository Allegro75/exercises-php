---

name: Комбинирование операций и функций
theory: |

  Логические операции — это выражения, а значит, их можно комбинировать с другими выражениями.

  Предположим, что мы хотим проверить чётность числа. В программировании для этого делят число на два и смотрят, равен ли остаток нулю. Если равен, то это четное число, если не равен, то нечетное.

  Вот программа, проверяющая четность числа:

  ```php
  <?php

  function isEven($number)
  {
      return $number % 2 === 0;
  }

  isEven(10); // => true
  isEven(3);  // => false
  ```

  Мы скомбинировали логический оператор `===` и арифметический оператор `%` в одном выражении. Приоритет арифметических операций выше логических. Значит, сначала вычислится арифметическое выражение `$number % 2`, затем его результат будет участвовать в логическом сравнении.

  По-русски это можно расшифровать так: «вычислить остаток от деления числа `$number` на 2 и сравнить равенство этого остатка с нулём; затем вернуть результат проверки равенства».

  ---

  Другой пример — функция, проверяющая заглавная ли первая буква в переданной строке. Для решения этой задачи нужно вспомнить об извлечении символов из строки. Для этого используются квадратные скобки:

  ```php
  <?php

  $firstName = 'Alexander';

  $firstName[0]; // => A
  $firstName[1]; // => l
  $firstName[2]; // => e
  $firstName[8]; // => r
  ```

  Наша функция будет работать по такому алгоритму:

  1. Получим и запишем в переменную первый символ из строки-аргумента.
  1. Сравним, равен ли символ своей большой (заглавной) версии.
  1. Вернём результат.

  Для получения заглавной версии символа используем функцию `strtoupper`, которая принимает на вход строку и возвращает копию оригинальной строки, в которой все буквы стали заглавными.

  В нашем случае строка будет состоять лишь из одного символа:

  ```php
  <?php

  function isFirstLetterInUpperCase($string)
  {
      $firstLetter = $string[0];
      return strtoupper($firstLetter) === $firstLetter;
  }

  isFirstLetterInUpperCase('marmont'); // => false
  isFirstLetterInUpperCase('Robb'); // => true
  ```

  Попробуйте проговорить происходящее по-русски, аналогично тому, как мы расшифровывали процесс в примере с `isEven` в начале урока.

instructions: |

  Сэм решил изучить историю Таргариенов со времени первых людей, но книг было много и информация могла находиться в любой из них. К счастью для Сэма, большинство книг были оцифрованы молодыми мейстерами. Он подумал что неплохо бы написать функцию, которая анализует тексты на наличие в них упоминания фамилии Таргариенов.

  Реализуйте функцию `hasTargaryenReference`, которая принимает на вход строку и проверяет начинается ли она с `Targaryen`. Сделать это легко используя функцию `substr`, которая принимает на вход три параметра:

  * Исходную строку
  * Индекс с которого нужно взять подстроку
  * Длину извлекаемой подстроки

  Эта функция позволяет извлечь начало подстроки такой же длины как и слово `Targaryen`, а затем проверить равно ли оно `Targaryen`. Напомню что индексы начинаются с нуля.

tips:
  - |
    [strpos](http://php.net/manual/en/function.strpos.php)
