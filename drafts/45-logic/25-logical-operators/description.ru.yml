---

name: Логические операторы
theory: |

  Мы уже умеем писать функции, которые проверяют одиночные условия. Теперь научимся строить составные условия.

  Хороший пример: проверка пароля. Как вы знаете, некоторые сайты при регистрации хотят пароль от 8 до 20 символов в длину. Честно говоря, это странное ограничение, но что поделать.

  В математике мы бы написали `8 < x < 20`, но в PHP такой трюк не пройдет (хотя есть языки, в которых пройдет).

  Нам придётся сделать два отдельных логических выражения и соединить их специальным оператором «И»:

  _Пароль длиннее 8 символов **И** пароль короче 20 символов._

  Вот функция, которая принимает пароль и говорит, соответствует ли он условиям (`true`) или не соответствует (`false`):

  ```php
  <?php

  function isCorrectFunction($password)
  {
      const $length = strlen($password);
      return $length > 8 && $length < 20;
  }

  isCorrectFunction('qwerty'); // => false
  isCorrectFunction('qwerty1234'); // => true
  isCorrectFunction('zxcvbnmasdfghjkqwertyui'); // => false
  ```

  `&&` - означает «И» (в математической логике это называют конъюнкцией). Всё выражение считается истинным только если истинен каждый операнд — каждое из составных выражений. Иными словами, `&&` означает «и то, и другое».

  Приоритет этого оператора ниже, чем приоритет операторов сравнения, поэтому выражение отрабатывает правильно без скобок.

  Кроме `&&` часто используется оператор `||` — «ИЛИ» (дизъюнкция). Он означает «или то, или другое, или оба».

  Операторы можно комбинировать в любом количестве и любой последовательности, но когда одновременно встречаются `&&` и `||`, то приоритет лучше задавать скобками.

  ---

  Попробуем реализовать функцию, проверяющую год на високосность. Год будет високосным, если он кратен 400 или он одновременно кратен 4 и не кратен 100. Как видите, в определении уже заложена вся необходимая логика, осталось только переложить её на код:

  ```php
  <?php

  function isLeapYear($year)
  {
      return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
  }
  ```

  Разберём по частям:

  - первое условие `year % 400 === 0`:остаток от деления на 400 равен 0, значит, число кратно 400
  - `||` **ИЛИ**
  - второе условие `(year % 4 === 0 && year % 100 !== 0)`
      - `year % 4 === 0`: остаток от деления на 4 равен 0, значит, число кратно 4
      - `&&` **И**
      - `year % 100 !== 0`: остаток от деления на 100 не равен 0, значит, число не кратно 100

  Возможны такие варианты выражения в нашей функции:

  * `true || (true && true)`
  * `true || (false && true)`
  * `false || (true && true)`
  * `false || (false && true)`
  * `false || (true && false)`
  * `false || (false && false)`

  Для правильного вычисления этих вариантов необходимо знать булеву алгебру. Её понимание сводится к запоминанию двух таблиц соответствий:

  **И (`&&`)**

  | A     | B     | A И B   |
  | ----- | ----- | ------- |
  | TRUE  | TRUE  | TRUE    |
  | TRUE  | FALSE | FALSE   |
  | FALSE | TRUE  | FALSE   |
  | FALSE | FALSE | FALSE   |


  **ИЛИ (`||`)**

  | A     | B     | A ИЛИ B |
  | ----- | ----- | ------- |
  | TRUE  | TRUE  | TRUE    |
  | TRUE  | FALSE | TRUE    |
  | FALSE | TRUE  | TRUE    |
  | FALSE | FALSE | FALSE   |

instructions: |

  Джон поручил Сэму реализовать автоматическое распознавание солдат Ланнистеров на видео. Идея автоматизировать дозор крепости казалась ему привлекательной. В процессе работы Сэму понадобилось написать функцию, которая определяет Ланнистер ли перед ним или нет. Немного подумав, Сэм выделил следующие правила по которым можно определить Ланнистера:

  Если у солдата есть щит и на нем изображен лев
  или если у солдата нет щита и доспехи красного цвета
  то это Ланнистер

  Реализуйте функцию `isLannisterSoldier`, которая принимает на вход:

  * Цвет доспехов как строчка. Если они красные, то передается _red_.
  * Название изображения на щите. В случае Льва - _lion_. В случа если щита нет, то передается `null`.

tips:
  - |
    [Булева алгебра](https://ru.wikipedia.org/wiki/%D0%91%D1%83%D0%BB%D0%B5%D0%B2%D0%B0_%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0)
  - |
    [Коньюнкция](https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D1%8A%D1%8E%D0%BD%D0%BA%D1%86%D0%B8%D1%8F)
  - |
    [Дизьюнкция](https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%B7%D1%8A%D1%8E%D0%BD%D0%BA%D1%86%D0%B8%D1%8F)
