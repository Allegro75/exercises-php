---

name: Комбинирование операций и функций
theory: |

  Логические операции — это выражения. Значит, **логические операции можно комбинировать с другими выражениями**.

  ---

  Мы хотим проверить чётность числа. В программировании используют такой подход: разделить число на две целые части и посмотреть, есть ли остаток.

  - Если остаток равен нулю, то число было чётным (10 → 5 + 5, остаток 0).
  - Если остаток не равен нулю, то число было нечётным (11 → 5 + 5, остаток 1).

  Оператор `%` вычисляет остаток от целочисленного деления. С помощью него напишем функцию проверки чётности:

  ```php
  <?php

  function isEven($number)
  {
      return $number % 2 === 0;
  }

  isEven(10); // => true
  isEven(3);  // => false
  ```

  В одном выражении мы скомбинировали логический оператор `===` (проверка равенства) и арифметический оператор `%`.

  **Приоритет арифметических операций выше логических.** Значит, сначала вычисляется арифметическое выражение `$number % 2`, затем результат участвует в логическом сравнении.

  По-русски это можно расшифровать так: *«вычислить остаток от деления числа `$number` на 2 и сравнить, равен ли остаток нулю; затем вернуть результат проверки равенства»*.

  ---

  Другой пример: напишем функцию, которая принимает строку и проверяет, заглавная ли первая буква.

  Алгоритм:

  1. Получим и запишем в переменную первый символ из строки-аргумента.
  1. Сравним, равен ли символ своей большой (заглавной) версии.
  1. Вернём результат.

  ```php
  <?php

  function isFirstLetterInUpperCase($string)
  {
      $firstLetter = $string[0];
      return strtoupper($firstLetter) === $firstLetter;
  }

  isFirstLetterInUpperCase('marmont'); // => false
  isFirstLetterInUpperCase('Robb'); // => true
  ```

  Мы использовали [функцию `strtoupper` из стандартной библиотеки PHP](http://php.net/manual/ru/function.strtoupper.php). Она принимает строку и возвращает строку, в которой все буквы стали заглавными. Мы передаём ей всего один символ — первый символ строки.

  Попробуйте проговорить происходящее по-русски, аналогично тому, как мы расшифровывали процесс в примере с `isEven` в начале урока.

  ---

  *Напомним об извлечении символов из строки с помощью квадратных скобок:*

  ```php
  <?php

  $firstName = 'Alexander';

  $firstName[0]; // => A
  ```

instructions: |

  Сэм решил изучить историю Таргариенов со времени первых людей, но книг было много и информация могла находиться в любой из них. К счастью для Сэма, большинство книг были оцифрованы молодыми мейстерами. Он подумал что неплохо бы написать функцию, которая анализует тексты на наличие в них упоминания фамилии Таргариенов.

  Реализуйте функцию `hasTargaryenReference`, которая принимает на вход строку и проверяет начинается ли она с `Targaryen`. Сделать это легко используя функцию `substr`, которая принимает на вход три параметра:

  * Исходную строку
  * Индекс с которого нужно взять подстроку
  * Длину извлекаемой подстроки

  Эта функция позволяет извлечь начало подстроки такой же длины как и слово `Targaryen`, а затем проверить равно ли оно `Targaryen`. Напомню что индексы начинаются с нуля.

tips:
  - |
    [strpos](http://php.net/manual/en/function.strpos.php)
