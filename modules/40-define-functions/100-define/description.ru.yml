---

name: Определение функции
theory: |

  Мы научились использовать существующие функции. Теперь научимся создавать новые функции самостоятельно. Синтаксис для создания функция включает множество элементов. Начнем рассматривать их постепенно, шаг за шагом создававая все более сложные функции.

  Создадим простую функцию:

  ```php
  <?php

  function sayMotto()
  {
      print_r('Motto: We Do Not Sow');
  }
  ```

  Вы видите практически минимально возможное определение функции: ключевое слово `function`, после которого через пробел идет имя функции. Имя выбирается исходя из того, что будет делать функция. Замыкают строку круглые скобки. Ранее мы использовали скобки с функциями только для вызова. Здесь, как мы видим, они используются для определения.

  Важно понимать различия. В данном примере функция не вызывается, она не будет исполнена. Интерпретатор, встречая определение, создает функцию. В PHP легко отличить вызов от определения. В определении всегда присутствует ключевое слово `function` слева от имени функции.

  Далее мы видим код между двумя фигурными скобками. Фигурные скобки обязательны. Их задача — задавать блок кода, который составляет тело функции. Именно тело функции выполняется в момент ее вызова. С точки зрения синтаксиса языка тело функции — это программа внутри программы. Там можно писать практически все, что угодно. В нашем примере телом является вызов другой функции — `print_r`. Как видите, синтаксис вызова в теле функции точно такой же, как и вне функции, вплоть до `;` в конце.

  Обратите внимание на отсутствие `;` после определения функции (после закрывающей фигурной скобки). Дело в том, что `;` ставится в конце выражений (если это выражение не является частью другого выражения). Определение функции — не выражение (как вы узнаете дальше в процессе обучения, определение функции иногда может быть выражением, и это сильно влияет процесс написания кода).

  Определение функции — инструкция (указание интерпретатору). Соответственно, мы не можем его использовать в составе других выражений и ему не нужна `;` в конце.

  Понятие «создать функцию» имеет много синонимов: «реализовать», «определить» и даже «заимплементить» (от слова implement). Все они встречаются в повседневной практике на работе.

  При повторном вызове функции её тело выполняется независимо от первого запуска. Что приведет к еще одному выводу на экран. Каждый последующий вызов работает точно так же.

  Вызовем нашу функцию:

  ```php
  <?php

  sayMotto();
  ```

instructions: |

  Реализуйте функцию `dracarys`, которая печатает на экран `phhh`.



tips: []
