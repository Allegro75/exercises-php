---

name: Аргументы как выражения
theory: |

  Рассмотрим код из предыдущего урока:

  ```php
  <?php

  $result = round(10.25); // 10
  ```

  Функция `round` вызывается с аргументом — значением `10.25`.

  Мы выяснили, что *выражения превращаются в значения*. То есть с точки зрения PHP значения и выражения — это что-то схожее. Поэтому любые значения в программе технически можно заменить выражениями.

  При вызове функции можно передать в неё аргументом **выражение**:

  ```php
  <?php

  $result = round(8 + 2.25); // 10
  ```

  Результат будет таким же, как в первом примере, потому что выражение `8 + 2.25` превратится в значение `10.25`, и с таким аргументом произойдет вызов `round`.

  Более того, можно использовать переменные в перемешку со значениями и другими выражениями:

  ```php
  <?php

  $number = 1.25;

  $rounded = round($number + 7 + 2); // 10
  ```

  Или пример посложнее:

  ```php
  <?php

  $wholePart = 10.0;
  $decimalPart = 0.24;

  $number = $wholePart + $decimalPart;

  $rounded = round($number + 0.1); // 10
  ```

instructions: |

  Сэм решил научить Тириона программированию и попросил реализовать его функцию `calculateDistanceByTirion`. Тирион не знал, что функции могут принимать на вход несколько аргументов, поэтому его функция принимает только один аргумент, в котором указаны два города.

  Его функция работает так: в неё нужно передать строку, в которой записаны два города через дефис `-`. Вот пример использования функции Тириона:

  ```php
  <?php

  $distance = calculateDistanceByTirion('Lannisport-Bayasabhad');
  ```

  Напишите программу, которая использует функцию `calculateDistanceByTirion` и выводит на экран расстояние между городами, записанными в переменные `$from` и `$to`.

  Напомним, что у вас в арсенале уже есть два способа соединения строк: конкатенация и интерполяция.

tips: []
