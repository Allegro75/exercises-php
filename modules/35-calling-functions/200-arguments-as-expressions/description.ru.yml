---

name: Аргументы как выражения
theory: |

  Даже не зная язык программирования, эмпирически можно выяснять, где ожидается работа с выражениями.

  В любом месте, где используются данные, их можно заменить выражением.

  Возьмем к примеру вызов функции `round(1.3)`. Аргумент — это **значение**. Следовательно, на его месте могут быть любые выражения. Мы можем написать `round(1.2 + 0.1)`.

  Более того, мы можем использовать переменные:

    ```php
    <?php

    $number = 1.2;

    $rounded = round($number + 0.1);
    ```

    И так до бесконечности можно добавлять новые переменные и выражения внутри выражений.

    ```php
    <?php

    $wholePart = 1.0;
    $decimalPart = 0.2;

    $number = $wholePart + $decimalPart;

    $rounded = round($number + 0.1);
    ```

instructions: |

  Сэм решил научить Тириона программированию и попросил реализовать его функцию `calculateDistanceByTirion`. Тирион не знал, что функции могут принимать на вход несколько аргументов, поэтому он реализовал функцию так, что она принимает на вход только один аргумент, в котором закодированы два города.

  Его функция работает так: единственным аргументом должна быть строка, в котором записаны два города через дефис `-`. Вот пример использования функции Тириона:

    ```php
    <?php

    $distance = calculateDistanceByTirion('Lannisport-Bayasabhad');
    ```

    Напишите программу, которая использует функцию `calculateDistanceByTirion` и выводит на экран расстояние между городами, записанными в переменные `$from` и `$to`.

    Напомним, что у вас в арсенале уже есть несколько способов соединения строк (конкатенация и интерполяция), и несколько способов создания данных для вызова функции (создание переменной или создание строки на ходу прямо в вызове функции `calculateDistanceByTirion`)

tips: []
