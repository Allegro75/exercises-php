---

name: Вызов функций
theory: |

  Как вы заметили, для каждой операции требуется свой собственный символ (оператор). Такой подход оправдан только для самых частых операций так как в реальной жизни их тысячи. Вспомните хотя бы математические: модуль числа, корень и интеграл. Для представления любой операции, в языках программирования существует понятие "функция", использование которой, с точки зрения синтаксиса, никогда не меняется, что позволяет функциями закодировать любую задачу без необходимости расширять язык программирования новыми операторами.

  Возьмем простой пример, возведение в степень. До определенной версии PHP, такого оператора не было в самом языке, но это не значит что возводить в степень было невозможно. Давайте сравним на примере "2 в 3 степени":

  ```php
  <?php

  // Теперь
  $result = 2 ** 3; // => 8

  // Раньше
  $result = pow(2, 3); // => 8
  ```

  И в первом и во втором примере выполняется одна и та же операция "возведение в степень", только в первом случае посредством предназначенного для этого оператора, во втором посредством функции. Запись `pow(2, 3)` означает, что была вызвана функция с именем `pow` и аргументами (или с параметрами) 2 и 3, которая в свою очередь _вернула_ значение. Вызов функции всегда обозначается скобками `()`, идущими сразу за именем вызываемой функции, внутри которых может быть любое количество аргументов и даже ни одного. Количество зависит от выполняемой операции. Например для нахождения модуля числа используется функция с именем `abs`:

  ```php
  <?php

  $result = abs(-5); // => 5
  $result = abs(8); // => 8
  ```

  Как видно, эта функция принимает один аргумент (часто говорят параметр) и возвращает его модуль. А вот пример функции, которая не принимает аргументов:

  ```php
  <?php

  $result = rand();
  ```

  Функция `rand` возвращает случайное число.

  Но математические операции - капля в море по сравнению со всем многообразием функций, не говоря уже про то, что их можно определять самостоятельно (чем мы займемся в следующем модуле). Любое действие, которое вы себе можете вообразить, в программировании представлено функциями.

instructions: |
   В этом и последующих модулях, мы будем использовать функции, выполняющие задачи по мотивам Game Of Thrones. В 7 королевствах жил один человек, который имел доступ к компьютерам и умел программировать - Сэм Тарли. Так как ему приходилось заниматься картами, он запрограммировал для себя несколько полезных функций для подходящих вычислений.

  В этом задании вам предоставлена функция `calculateDistance` высчитывающая расстояние (в лигах) между городами 7 королевств. Она принимает два строковых параметра, каждый из которых является названием города. Использовать ее можно так:

  ```php
  <?php

  // Пока не обращайте внимание на эту строчку, мы ее добавляем автоматически
  use function HexletBasics\Functions\calculateDistance;

  $distance = calculateDistance('Lannisport', 'Bayasabhad');
  print_r($distance);
  ```

  Вычислите расстояние между городами Qarth и Vaes Dothrak.



tips: []
