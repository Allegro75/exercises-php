---

name: Сигнатура функции
theory: |

  Когда мы работаем с новыми функциями, то в первую очередь нас интересует сигнатура функции. Она определяет входные параметры и их типы, а так же выходной параметр и его тип. Например функция `pow` принимает два числовых параметра и возвращает также число.

Начнем с количества параметров. Если сигнатура включает в себя два обязательных параметра, то мы не можем передать их меньше чем два или больше чем два. Если вызывать `pow` без параметров, то PHP выдаст следующее: `PHP Warning:  pow() expects exactly 2 parameters, 0 given in php shell code on line 1`. Другими словами, он хочет два и только два параметра. Еще один важный аспект заключается в том, какого типа эти параметры. Очевидно что операция возведения в степень, работает только с числами и функциям `pow` следует этому. Попытка передать в нее, например, строку, приведет к следующей ошибке: `PHP Warning:  A non-numeric value encountered in php shell code on line 1`. Причем не важно первым или вторым параметром или обоими сразу. Но обращаю ваше внимание на то, что иногда функции принимают на вход аргументы разных типов. С такими функциями мы познакомимся позже. И последнее про аргументы. Передавать аргументы можно только в той последовательности, в которой они определены в сигнатуре, за исключением редких функций, которые выполняют коммутативные операции, например, можно представить себе функцию `sum`, которая складывает два числа. А вот та же функция `pow`, выдаст совершенно разные результаты если вы перепутаете аргументы местами, но, заметьте, она не упадет с ошибкой, ведь и первый и второй аргументы числа. То есть если можно возвести 3 в 5 степень, то и 5 можно возвести в 3 степень.

Теперь про возврат. Возвращается всегда ровно одно значение. Ограничение существует на уровне языка и не может быть нарушено. С другой стороны тип возвращаемого значения может меняться и такое происходит довольно часто.


instructions: |

  В этом задании мы попробуем разобраться с функцией на основе ее документации. Документация русскоязычная, но вообще говоря, программист обязан уметь читать документацию на английском языке (со словарем). Если ваш уровень английского не позволяет этого, то имеет смысл начинать подтягивать английский прямо сейчас иначе будет сложно.

  Задача в том чтобы посмотреть на сигнатуру функции и правильно воспользоваться ей: http://php.net/manual/ru/function.ucfirst.php. Результат работы функции нужно напечатать. Данные для нее хранятся в переменной `$text`.

tips: []
