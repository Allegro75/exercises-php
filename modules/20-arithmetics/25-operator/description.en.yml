---

name: Operators
theory: |

  Let's learn some important terminology before moving forward. The sign like `+` is called an **operator**. It's just a symbol that produces a certain operation. Later you'll learn that there are other operators in PHP, not just arithmetic ones.

  ```php
  <?php

  print_r(8 + 2);
  ```

  In this example `+` is an **operator**, and numbers `8` and `2` are **operands**.

  In addition there're two operands: one on the left, one on the right from `+`. Operators that require two operands are called **binary**. If you skip at least one operand, like so `3 + ;`, the program will stop with an error.

  There are also unary operations (operator with one operand) and even ternary (operator with three operands). Some operators look the same, but mean different things depending on usage:

  ```php
  <?php

  print_r(-3); // => -3
  ```

  In the example above a unary operator `-` is being applied to the number `3`. It tells the interpreter to take number `3` and find the opposite: `-3`.

  This might be a bit confusing, since `-3` is both a number and an operator with an operand. But this is how programming languages work.

instructions: |

  Write a program that calculates the difference between `6` and `-81`, and prints the result on the screen.

definitions:
  - name: "Arithmetic operator"
    description: "addition, substraction, multiplication, division."
  - name: "Operator"
    description: "special symbol that creates an action. For example, `+` creates addition."
  - name: "Operand"
    description: "that what is being used with an operator. `3 * 6`: here 3 and 6 are operands."
  - name: "Unary operation"
    description: "operation that requires one operand."
  - name: "Binary opeation"
    description: "operation that requires two operands."
