---

name: Операторы
theory: |
  Перед тем как двигаться дальше, разберем базовую терминологию. Знак операции, такой как `+` называют **оператором**. Оператор — просто символ, который производит некоторую операцию. Как вы узнаете далее, операторы бывают не только арифметическими.

  ```php
  <?php

  print_r(8 + 2);
  ```

  В этом примере `+` это оператор, а числа `8` и `2` — это **операнды**.

  В случае сложения у нас есть два операнда: один слева, другой справа от знака `+`. Операции, которые требуют наличия двух операндов, называются **бинарными**. Если пропустить хотя бы один операнд, то программа завершится с синтаксической ошибкой, например, в таком случае: `3 + ;`.

  Операции бывают не только бинарными, но и унарными (с одним операндом) и даже тернарными (с тремя операндами)! Причем, имена их могут совпадать, а различия видны только в контексте использования:

    ```php
    <?php

    print_r(-3); // => -3
    ```

  Выше пример применения унарной операции к числу `3`. Минус перед тройкой говорит интерпретатору взять число `3` и найти противоположное, то есть `-3`.

  Это немного может сбить с толку, потому что `-3` — это одновременно и число само по себе, и оператор с операндом, но у языков программирования такая структура.

instructions: |

  Напишите программу, которая посчитает разницу между `6` и `-81` и выведет ответ на экран.


tips: []

definitions:
  - "Арифметическая операция — сложение, вычитание, умножение и деление."
  - "Оператор — специальный символ, создающий операцию. Например, `+` создает операцию сложения."
  - "Операнд — объект, который участвует в операции. `3 * 6`: здесь 3 и 6 — операнды."
  - "Унарная операция — операция с одним операндом. Например, `-3` — унарная операция для получения числа, противоположного числу три."
  - "Бинарная операция — операция с двумя операндами. Например, `3 + 9`."