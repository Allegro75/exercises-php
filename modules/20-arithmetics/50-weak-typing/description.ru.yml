---

name: Слабая типизация
theory: |

  Напомню что тип в языках программирования, определяет набор допустимых операций, которые можно применить к данным этого типа, а так же допустимые значения типа. Например в языках со строгой типизацией, попытка сложить строки приведет к ошибке, также как и попытка сложить число со строкой. PHP относится к языкам с, так называемой, слабой типизацией. Когда php видит что типы не соответствуют, он пытается выполнить приведение. Например следующий код в php отработает:

  ```php
  print_r(1 + '7'); // => 8
  ```

  На первый взгляд такое поведение может даже показаться логичным и с этими же мыслями его внедряли. php создавался для веба и все что приходит на сервер из браузера, приходит в виде строк. Создателям языка показалось логичным преобразовывать типы автоматически, чтобы программист не занимался этой работой. На практике же, неявное приведение типов создает множество очень трудноотловимых ошибок. Код может работать иногда, а иногда работать не будет. В том месте где должна была произойти ошибка по логике, ошибка не произойдет и, с большой вероятностью, вы не сразу заметите ошибку.

  В дальнейших практиках вы будете встречаться с таким поведением не раз, причем как правило в ситуации "почему мой код работает не как я ожидаю?". Слабая типизация красной нитью проходить сквозь всю разработку на php.

instructions: |

  Выведите на экран результат выражения: `7 - (-8 - -2)`


tips: []
