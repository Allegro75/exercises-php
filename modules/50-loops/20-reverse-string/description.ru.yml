---

name: Переворот строки
theory: |

  Переворот строки - простейшая алгоритмическая задача, которую можно встретить даже на собеседованиях. Правильный способ перевернуть строку - использовать функцию из стандартной библиотеки, но, в целях обучения, полезно реализовать ее самостоятельно.

  Один из алгоритмов состоит в том, чтобы перебирая символы строки в цикле (от первого до последнего), строить новую строчку в обратном порядке используя интерполяцию или конкатенацию.

  ```php
  <?php

  function reverseString($str)
  {
      $index = strlen($str) - 1;
      $reversedString = '';
      while ($index >= 0) {
          $currentChar = $str[$index];
          $reversedString = "{$reversedString}{$currentChar}";
          $index = $index - 1;
      }

      return $reversedString;
  }

  reverseString('Game Of Thrones');
  // => senorhT fO emaG
  ```

  Разберем функцию построчно:

  * `$index = strlen($str) - 1` - индекс последнего символа в строке становится начальным значением счетчика (а значит цикл будет идти от последнего символа к первому).
  * `$reversedString = ''` - обязательная инициализация перевернутой строки. Ее заполнение происходит в цикле.
  * `while ($index >= 0)` - последняя итерация цикла сработает для `$index` равным `0`, что соответствует первому символу в строке.
  * `$currentChar = $str[$index]` - из строки берется символ обрабатываемый текущей итерацией.
  * `$reversedString = "{$reversedString}{$currentChar}"` - то самое место где идет создание новой строки. Так как перебор символов происходит с конца в начало, то интерполяция осуществляется в прямом порядке. Текущий символ приписывается в конец.
  * `$index = $index - 1` - обновление счетчика.
  * `return $reversedString` - возврат получившейся строки из функции. Обратите внимание что возврат делается не в теле цикла, а после. Только в этом случае отработают все итерации цикла.

  Обязательно скопируйте эту функцию в https://repl.it/languages/php и "поиграйте" с ней.

  Работая со строками, программисты часто допускают ошибку "выход за границы строки". При неправильном подборе начального значения счетчика или ошибке в предикате цикла, может получиться ситуация, при которой идет обращение к символу строки, которого не существует. Например `$str[-1]`. Особенно часто забывают про то что индекс последнего элемента, всегда меньше на единицу размера строки. Так происходит из-за того, что в строках начальный индекс равен `0`, а значит индекс последнего элемента - `strlen($str) - 1`.

instructions: |

  Реализуйте функцию `mysubstr`, которая извлекает из строки, подстроку указанной длины. Она принимает на вход два аргумента: саму строку и длину, а возвращает подстроку начиная с первого символа:

  Пример вызова:

  ```php
  <?php

  $str = 'If I look back I am lost';
  mysubstr($str, 1); // => I
  mysubstr($str, 7); // => If I lo
  ```
  ```

tips: []
