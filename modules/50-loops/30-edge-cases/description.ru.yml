---

name: Пограничные случаи
theory: |

  Функция `mysubstr`, которую вы реализовали в прошлом уроке, содержит множество ошибок. «Но ведь она прошла проверки!» Да, но в этих проверках не было так называемых **пограничных случаев**. Как поведет себя ваша функция, если передать ей такие варианты длины:

  * `0`
  * Отрицательную длину
  * Длину, превышающую реальный размер строки

  Ошибки в пограничных случаях — самая частая причина логических ошибок в программах. Программисты всегда забывают что-нибудь учесть. Самое неприятное — такие ошибки нередко проявляются не сразу, и могут долгое время не приводить к видимым ошибкам. Программа продолжает работать, но в какой-то момент обнаруживается, что в ответах есть ошибки. Часто причина в слабой типизации PHP.

  Умение справляться с такими ошибками приходит с опытом, через постоянные косяки в стиле «ой, забыл проверить на пустую строку!».

  ---

  Давайте представим себе расширенную функцию `mysubstr`. Она принимает три аргумента: строчку, начальный индекс и длину. Примеры вызова:

  ```php
  $str = 'If I look back I am lost';
  mysubstr($str, 0, 1); // => 'I'
  mysubstr($str, 3, 6); // => 'I look'
  ```

  Прикинем, что может пойти не так. Какие **пограничные случаи** стоит учитывать:

  * Отрицательная длина строки
  * Отрицательный индекс
  * Индекс выходит за границу строки
  * Длина в сумме с индексом приводит к выходу за границу строки

  В реализации функции каждый пограничный случай будет отдельным куском код, скорее всего реализованным с помощью `if`.

  Чтобы написать функцию `mysubstr` и защититься от этих случаев, стоит написать отдельную функцию, которая будет проверять аргументы на корректность. Займемся этим в задании.

instructions: |

  Реализуйте функцию-предикат `isArgumentsForSubstrCorrect`, которая принимает три аргумента: строку, начальный индекс и длину. Функция возвращает `true` если аргументы корректные и `false` если нет.

  То есть функция возвращает `false` если хотя бы одно из условий истинно:

  * Отрицательная длина строки
  * Отрицательный индекс
  * Индекс выходит за границу строки
  * Длина в сумме с индексом приводит к выходу за границу строки

  В ином случае функция возвращает `true`.

  Пример вызова:

  ```php
  <?php

  $str = 'Sansa Stark';
  isArgumentsForSubstrCorrect($str, -1, 3); // => false
  isArgumentsForSubstrCorrect($str, 4, 100); // => false
  isArgumentsForSubstrCorrect($str, 10, 10); // => false
  isArgumentsForSubstrCorrect($str, 11, 1); // => false
  isArgumentsForSubstrCorrect($str, 3, 3); // => true
  isArgumentsForSubstrCorrect($str, 0, 5); // => true
  ```

  Определить длину строки можно с помощью `strlen($str)`

tips: []
