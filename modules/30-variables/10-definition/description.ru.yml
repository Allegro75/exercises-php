---

name: Определение
theory: |

  Представьте себе программу, задача которой состоит в печати 'dracarys!' три раза.

  ```php
  <?php

  print_r('Dracarys!');
  print_r('Dracarys!');
  print_r('Dracarys!');
  ```

  Если в дальнейшем понадобится изменить печатаемое слово, то придется провести изменения сразу в трех местах. В программировании подобная ситуация называется дублирование кода и, обычно, ее пытаются избежать. Для устранения дублирования напрашивается идея вынести печатаемую строку отдельно и менять только ее, без необходимости переписывать всю программу. Сделать это можно используя переменные. В программу добавится два новых действия:

  1. Создание переменной, где мы опишем чему она равна.
  1. Использование переменной, в тех местах где была строка, произойдет замена на нее.

  Для начала немного о способе записи переменных в PHP (этот способ отличается от других языков!). Сама переменная описывается таким синтаксисом `$varname`. Первым символом обязательно идет `$`, а затем любой набор допустимых символов, к которым относятся буквы английского алфавита, цифры и знаки `-`, `_`, причем цифра не может идти первой.

  Самое простое в переменных - их использование. Нужно, всего лишь навсего, обратиться к ней по имени в нужном месте. Вот как будет выглядеть наша программа с переменной:

  ```php
  <?php

  print_r($action);
  print_r($action);
  print_r($action);
  ```

  Если запустить код выше, то он не заработает. В нем уже используется переменная, но сама переменная не создана, или, как говорят, не определена. Убедитесь что вы хорошо поняли этот пример. Нельзя использовать переменную, которая еще не была создана. Подобную ошибку совершают большинство новичков. И хотя интерпретатор об этом говорит прямо и доходчиво, по началу, мало кто читает его вывод.

  Теперь определим переменную:

  ```php
  <?php

  $action = 'Dracarys!'; // по прежнему символ `;` в конце

  print_r($action);
  print_r($action);
  print_r($action);
  ```

  Теперь программа отработает корректно. Переменная сначала была определена, а затем успешно использована. В отличие от математического `=`, равно в PHP означает присвоение значения переменной. Грубо говоря мы проименовали данные и теперь можем обращаться к ним по имени.

  Возможно вас волнует вопрос, почему переменная называется `action`. В действительности я мог написать `$x` или `$privet` или, даже `$la32f`. С точки зрения интерпретатора, имена ничего не значат, их цель исключительно в идентификации, то есть способе отличить друг от друга. Но люди не машины и имена, для нас, значат очень многое. Среди программистов популярна шутка, что в программировании самое сложное это имена переменных и инвалидация кешей. Вторую тему мы не затронем, а вот первая встанет во весь рост как и в процессе обучения так и в процессе работы. Запомните очень хорошо, в современном мире код пишется для людей. Мы гораздо чаще читаем код, причем не свой, а написанный другими людьи. От того как все проименованно, зависит половина успеха в анализе.

instructions: |

  Создайте переменную с именем "motto" и содержимым "What Is Dead May Never Die!". Распечайте содержимое переменной.


tips:
  - "[Именование в программировании](https://ru.hexlet.io/blog/posts/naming-in-programming)"
